AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Simplified Serverless Image Upload and Processing with S3 and API Gateway

Globals:
  Function:
    Runtime: python3.10
    Timeout: 10
    MemorySize: 128
    Tracing: Active
    Environment:
      Variables:
        BUCKET_NAME: !Ref ImageBucket

Resources:

  ImageBucket:
    Type: AWS::S3::Bucket

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaBasicS3Policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                Resource:
                  - !GetAtt ImageBucket.Arn
                  - !Sub "${ImageBucket.Arn}/*"

  ImageApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: ImageApi
      StageName: Prod
      Cors:
        AllowMethods: "'POST,OPTIONS'"
        AllowHeaders: "'Content-Type'"
        AllowOrigin: "'*'"

  UploadImageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: upload.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Events:
        UploadAPI:
          Type: Api
          Properties:
            Path: /uploadimage
            Method: post
            RestApiId: !Ref ImageApi

  ProcessImageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: process.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Events:
        ImageUpload:
          Type: S3
          Properties:
            Bucket: !Ref ImageBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .jpg
                  - Name: suffix
                    Value: .jpeg
                  - Name: suffix
                    Value: .png

Outputs:

  UploadAPIEndpoint:
    Description: "API Gateway endpoint to upload image"
    Value: !Sub "https://${ImageApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/uploadimage"

  ImageBucketName:
    Description: "S3 bucket name for image uploads"
    Value: !Ref ImageBucket
