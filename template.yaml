AWSTemplateFormatVersion: '2010-09-09'
Description: Serverless Image Upload and Processing - No SAM

Resources:

  ImageBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "img-${AWS::AccountId}-${AWS::Region}-${AWS::StackName}"
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: "s3:ObjectCreated:*"
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .jpg
            Function: !GetAtt ProcessImageFunction.Arn
          - Event: "s3:ObjectCreated:*"
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .png
            Function: !GetAtt ProcessImageFunction.Arn
      CorsConfiguration:
        CorsRules:
          - AllowedOrigins: ["*"]
            AllowedMethods: ["GET", "PUT", "POST", "HEAD"]
            AllowedHeaders: ["*"]
            MaxAge: 3000

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LambdaExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaS3AccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                Resource:
                  - !GetAtt ImageBucket.Arn
                  - !Sub "${ImageBucket.Arn}/*"

  UploadImageFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: UploadImageFunction
      Runtime: python3.10
      Role: !GetAtt LambdaExecutionRole.Arn
      Handler: upload.lambda_handler
      Code:
        S3Bucket: <REPLACE_WITH_YOUR_DEPLOYMENT_BUCKET>
        S3Key: <REPLACE_WITH_ZIPPED_CODE_KEY>
      Environment:
        Variables:
          BUCKET_NAME: !Ref ImageBucket

  ProcessImageFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: ProcessImageFunction
      Runtime: python3.10
      Role: !GetAtt LambdaExecutionRole.Arn
      Handler: process.lambda_handler
      Code:
        S3Bucket: <REPLACE_WITH_YOUR_DEPLOYMENT_BUCKET>
        S3Key: <REPLACE_WITH_ZIPPED_CODE_KEY>
      Environment:
        Variables:
          BUCKET_NAME: !Ref ImageBucket

  LambdaInvokePermissionForS3:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ProcessImageFunction
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn: !GetAtt ImageBucket.Arn

Outputs:

  BucketName:
    Description: Name of the S3 bucket
    Value: !Ref ImageBucket

  UploadFunction:
    Description: Upload Image Lambda Function Name
    Value: !Ref UploadImageFunction

  ProcessFunction:
    Description: Process Image Lambda Function Name
    Value: !Ref ProcessImageFunction
